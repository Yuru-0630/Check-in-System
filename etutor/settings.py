"""
Django settings for etutor project.

Generated by 'django-admin startproject' using Django 2.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '-(is#n^r)1x1nn$h=n52%78a63&ncuwt9x=yld!*hi5+8+_apc'

# SECURITY WARNING: don't run with debug turned on in production!
# DEBUG = False
DEBUG = True


ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    # 'bootstrap_admin',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'user',
    'checkin',
    'score',
    'score_revision',
    'forestage',
    'backstage',
    'leave',
    'classroom',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'etutor.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, 'templates'),
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'etutor.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

DATABASES = {
    'default': {
        # 'ENGINE': 'django.db.backends.sqlite3',
        # 'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'etutor',

        'USER':'etutor',
        'PASSWORD':'etutor',
        # 'HOST':'10.40.23.127',
        'HOST':'127.0.0.1',


        'PORT':'',
        'OPTIONS':{
            "init_command": "SET sql_mode='STRICT_TRANS_TABLES';",  
            "init_command": "SET foreign_key_checks = 0;",
        }
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'zh-hant'

TIME_ZONE = 'Asia/Taipei'

USE_I18N = True

USE_L10N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

if DEBUG:
    STATICFILES_DIRS = (
        os.path.join(BASE_DIR, "static"),
    )
    STATIC_ROOT = ''
else:
    STATIC_ROOT = "/var/www/etutor/static"
if DEBUG:
    STATIC_URL = '/static/'
else:
    STATIC_URL = '/static/'
if DEBUG:
    MEDIA_URL = '/media/'
else:
    MEDIA_URL = '/media/'
if DEBUG:
    MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
else:
    MEDIA_ROOT = "/var/www/media"

AUTH_USER_MODEL = 'user.User'

HOST_NAME = "https://ncnuetutor.nubes.tw"
BACKSTAGE_ROOT = "/backstage" 
DATA_UPLOAD_MAX_MEMORY_SIZE = 262144000 #250MB


# CELERY_IMPORTS = ('checkin.views',)
# BROKER_URL = 'amqp://guest@localhost:5672//'
# CELERY_RESULT_BACKEND = 'amqp://guest@localhost:5672//'
# CELERY_ACCEPT_CONTENT = ['pickle', 'json', 'msgpack', 'yaml']
# CELERY_TASK_RESULT_EXPIRES = 60 * 60 * 24 * 30
# CELERY_MAX_TASKS_PER_CHILD = 100  # 每个worker最多执行100个任务就会被销毁，可防止内存泄露
# CELERY_TASK_TIME_LIMIT = 60 * 10  # 单个任务的运行时间不超过此值，否则会被SIGKILL 信号杀死
# CELERYBEAT_SCHEDULER = 'djcelery.schedulers.DatabaseScheduler'  # 定时任务调度器


from datetime import timedelta
from celery.schedules import crontab
CELERYBEAT_SCHEDULE = {
    'add_Monday_class': {
        'task': 'checkin.views.add_today_class',
        'schedule': crontab(hour=13, minute=30, day_of_week=1),
        'args': (1,)
    },
    'add_Tuesday_class': {
        'task': 'checkin.views.add_today_class',
        'schedule': crontab(hour=13, minute=30, day_of_week=2),
        'args': (2,)
    },
    'add_Wednesday_class': {
        'task': 'checkin.views.add_today_class',
        'schedule': crontab(hour=13, minute=30, day_of_week=3),
        'args': (3,)
    },
    'add_Thursday_class': {
        'task': 'checkin.views.add_today_class',
        'schedule': crontab(hour=13, minute=30, day_of_week=4),
        'args': (4,)
    },
    'add_Friday_class': {
        'task': 'checkin.views.add_today_class',
        'schedule': crontab(hour=13, minute=30, day_of_week=5),
        'args': (5,)
    },
}

from django.contrib.messages import constants as messages

MESSAGE_TAGS = {
    messages.ERROR: 'danger'
}