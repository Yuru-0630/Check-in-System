# Generated by Django 2.1.7 on 2019-02-16 23:55

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='編號')),
                ('name', models.CharField(max_length=100, verbose_name='姓名')),
                ('identity', models.PositiveIntegerField(verbose_name='身份')),
                ('phone_number', models.CharField(blank=True, default='', max_length=20, verbose_name='電話號碼')),
                ('photo', models.ImageField(upload_to='etutor/user')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '使用者',
                'verbose_name_plural': '使用者',
                'managed': True,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Companion',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='編號')),
                ('User_id', models.PositiveIntegerField()),
                ('department_id', models.PositiveIntegerField(verbose_name='系所')),
                ('grade', models.PositiveIntegerField(verbose_name='年級')),
                ('student_ID_number', models.CharField(max_length=100, verbose_name='學號')),
                ('student_ID_card_number', models.CharField(max_length=100, verbose_name='學生證號碼')),
                ('isServing', models.BooleanField(default=True, verbose_name='是否服務中')),
                ('note', models.TextField(blank=True, default='', verbose_name='備註')),
            ],
            options={
                'verbose_name': '大學伴',
                'verbose_name_plural': '大學伴',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='編號')),
                ('name', models.CharField(max_length=100, verbose_name='名稱')),
            ],
            options={
                'verbose_name': '系所',
                'verbose_name_plural': '系所',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Partner_school',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='編號')),
                ('name', models.CharField(max_length=100, verbose_name='名稱')),
            ],
            options={
                'verbose_name': '夥伴學校',
                'verbose_name_plural': '夥伴學校',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='編號')),
                ('User_id', models.PositiveIntegerField()),
                ('partner_school_id', models.PositiveIntegerField(verbose_name='學校')),
                ('grade', models.PositiveIntegerField(verbose_name='年級')),
                ('sex', models.PositiveIntegerField(verbose_name='性別')),
                ('note', models.TextField(blank=True, default='', verbose_name='備註')),
            ],
            options={
                'verbose_name': '小學伴',
                'verbose_name_plural': '小學伴',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='編號')),
                ('User_id', models.PositiveIntegerField()),
                ('partner_school_id', models.PositiveIntegerField(verbose_name='學校')),
                ('isServing', models.BooleanField(default=True, verbose_name='是否服務中')),
                ('note', models.TextField(blank=True, default='', verbose_name='備註')),
            ],
            options={
                'verbose_name': '帶班老師',
                'verbose_name_plural': '帶班老師',
                'managed': True,
            },
        ),
    ]
